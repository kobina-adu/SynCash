version: '3.8'

services:
  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: synccash-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - synccash-monitoring
    restart: unless-stopped

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:9.3.0
    container_name: synccash-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=synccash2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks:
      - synccash-monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # AlertManager - Alert handling
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: synccash-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - synccash-monitoring
    restart: unless-stopped

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: synccash-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - synccash-monitoring
    restart: unless-stopped

  # Redis Exporter - Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:v1.45.0
    container_name: synccash-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://synccash-orchestrator-redis:6379
    networks:
      - synccash-monitoring
      - orchestrator_default
    restart: unless-stopped
    depends_on:
      - prometheus

  # Postgres Exporter - PostgreSQL metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.11.1
    container_name: synccash-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://synccash_user:synccash_password@synccash-orchestrator-db:5432/synccash_orchestrator?sslmode=disable
    networks:
      - synccash-monitoring
      - orchestrator_default
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  synccash-monitoring:
    driver: bridge
  orchestrator_default:
    external: true
